{"version":3,"sources":["components/AllPets.jsx","components/OnePet.jsx","components/CreatePet.jsx","components/EditPet.jsx","App.js","reportWebVitals.js","index.js"],"names":["AllPets","useState","allPets","setAllPets","useEffect","axios","get","then","res","console","log","data","results","catch","err","to","className","scope","sort","petz","index","type","toLowerCase","map","pet","idx","name","_id","OnePet","props","indyPet","setIndyPet","petID","onClick","e","delete","navigate","description","skill1","skill2","skill3","CreatePet","formInfo","setFormInfo","errors","setErrors","changeHandler","target","value","onSubmit","preventDefault","post","htmlFor","id","onChange","properties","message","EditPet","put","defaultValue","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a63dade.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst AllPets = () => {\r\n    const [allPets, setAllPets] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pets\")\r\n            .then(res => {\r\n                console.log(\"making axios get the pets...\")\r\n                console.log(res)\r\n                setAllPets(res.data.results)\r\n            })\r\n            .catch(err => console.log(\"errors retrieving all pets\", err))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <br /><Link to=\"/pets/new\" className=\"btn btn-primary\">Add a new pet</Link>\r\n            </div>\r\n            <br />\r\n            <h2>These pets are looking for a good home!</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {allPets.sort((petz,index) => (petz.type.toLowerCase() > index.type.toLowerCase()) ? 1 : -1).map((pet, idx) => {\r\n                        return (\r\n                            <tr key={idx}>\r\n                                <td>{pet.name}</td>\r\n                                <td>{pet.type}</td>\r\n                                <td><Link to={`/pets/${pet._id}`} className=\"btn btn-secondary\">details</Link> <Link to={`/pets/${pet._id}/edit`} className=\"btn btn-secondary\">edit</Link></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllPets;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nconst OnePet = props => {\r\n    const [indyPet, setIndyPet] = useState({})\r\n\r\n    const adoptPet = e => {\r\n        console.log(\"trying to adopt pet\")\r\n        axios.delete(`http://localhost:8000/api/pets/${props.petID}`)\r\n            .then(res => {\r\n                console.log(\"delete request sent\")\r\n                console.log(res)\r\n                navigate(\"/\")\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pets/${props.petID}`)\r\n            .then(res => {\r\n                console.log(\"response after trying to get ONE pet\", res)\r\n                setIndyPet(res.data.results)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [props.petID])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <br /><Link to=\"/\" className=\"btn btn-primary\">Return to Home</Link>\r\n            </div>\r\n            <br />\r\n            <div className=\"d-flex justify-content-between\">\r\n                <h2>Details about: {indyPet.name}</h2>\r\n                <button className=\"btn btn-danger\" onClick={adoptPet}>Adopt Pet</button>\r\n            </div>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">Pet Type: {indyPet.type}</p>\r\n                    <p className=\"card-text\">Description: {indyPet.description}</p>\r\n                    <p className=\"card-text\">Skills: {indyPet.skill1} / {indyPet.skill2} / {indyPet.skill3}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OnePet;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nconst CreatePet = () => {\r\n    const [formInfo, setFormInfo] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        skill1: \"\",\r\n        skill2: \"\",\r\n        skill3: \"\"\r\n    })\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const changeHandler = e => {\r\n        // console.log(\"changing form...\")\r\n        // console.log(e.target)\r\n        setFormInfo({\r\n            ...formInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:8000/api/pets\", formInfo)\r\n            .then(res => {\r\n                console.log(\"response after submitting the post request!\", res)\r\n                if (res.data.errors) {\r\n                    console.log(\"validation errors\")\r\n                    setErrors(res.data.errors)\r\n                }\r\n                else {\r\n                    navigate(\"/\")\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <div>\r\n                <Link to=\"/\" className=\"btn btn-primary\">Return to Home</Link>\r\n            </div>\r\n            <form onSubmit={submitHandler} className=\"col-6 mx-auto\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\"><h3>Pet Name</h3></label>\r\n                    <input type=\"text\" name=\"name\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <p className=\"text-danger\">{errors.name ? errors.name.properties.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\"><h3>Pet Type</h3></label>\r\n                    <input type=\"text\" name=\"type\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <p className=\"text-danger\">{errors.type ? errors.type.properties.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\"><h3>Pet Description</h3></label>\r\n                    <input type=\"text\" name=\"description\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <p className=\"text-danger\">{errors.description ? errors.description.properties.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\"><h3>Skills (optional)</h3></label>\r\n                    <p>Skill One</p>\r\n                    <input type=\"text\" name=\"skill1\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <br/><p>Skill Two</p>\r\n                    <input type=\"text\" name=\"skill2\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <br/><p>Skill Three</p>\r\n                    <input type=\"text\" name=\"skill3\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                </div>\r\n                <input type=\"submit\" value=\"Add Pet\" className=\"btn btn-success\" />\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePet;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nconst EditPet = props => {\r\n    const [formInfo, setFormInfo] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        skill1: \"\",\r\n        skill2: \"\",\r\n        skill3: \"\"\r\n    })\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pets/${props.petID}`)\r\n            .then(res => {\r\n                console.log(\"response after trying to get ONE pet\", res)\r\n                setFormInfo(res.data.results)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [props.petID])\r\n\r\n    const changeHandler = e => {\r\n        // console.log(\"changing form...\")\r\n        // console.log(e.target)\r\n        setFormInfo({\r\n            ...formInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        axios.put(`http://localhost:8000/api/pets/${props.petID}`, formInfo)\r\n            .then(res => {\r\n                console.log(\"response after submitting the post request!\", res)\r\n                if (res.data.errors) {\r\n                    console.log(\"validation errors\")\r\n                    setErrors(res.data.errors)\r\n                }\r\n                else {\r\n                    navigate(\"/\")\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <div>\r\n                <Link to=\"/\" className=\"btn btn-primary\">Return to Home</Link>\r\n            </div><br/>\r\n            <h2>Edit {formInfo.name}</h2>\r\n            <form onSubmit={submitHandler} className=\"col-6 mx-auto\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\"><h3>Pet Name</h3></label>\r\n                    <input type=\"text\" name=\"name\" id=\"\" className=\"form-control\" onChange={changeHandler} defaultValue={formInfo.name} />\r\n                    <p className=\"text-danger\">{errors.name ? errors.name.properties.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\"><h3>Pet Type</h3></label>\r\n                    <input type=\"text\" name=\"type\" id=\"\" className=\"form-control\" onChange={changeHandler} defaultValue={formInfo.type}/>\r\n                    <p className=\"text-danger\">{errors.type ? errors.type.properties.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\"><h3>Pet Description</h3></label>\r\n                    <input type=\"text\" name=\"description\" id=\"\" className=\"form-control\" onChange={changeHandler} defaultValue={formInfo.description}/>\r\n                    <p className=\"text-danger\">{errors.description ? errors.description.properties.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\"><h3>Skills (optional)</h3></label>\r\n                    <p>Skill One</p>\r\n                    <input type=\"text\" name=\"skill1\" id=\"\" className=\"form-control\" onChange={changeHandler} defaultValue={formInfo.skill1}/>\r\n                    <br/><p>Skill Two</p>\r\n                    <input type=\"text\" name=\"skill2\" id=\"\" className=\"form-control\" onChange={changeHandler} defaultValue={formInfo.skill2}/>\r\n                    <br/><p>Skill Three</p>\r\n                    <input type=\"text\" name=\"skill3\" id=\"\" className=\"form-control\" onChange={changeHandler} defaultValue={formInfo.skill3}/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Edit Pet\" className=\"btn btn-success\" />\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPet;","import { Router } from '@reach/router';\nimport AllPets from './components/AllPets';\nimport OnePet from './components/OnePet';\nimport CreatePet from './components/CreatePet';\nimport EditPet from './components/EditPet';\n\nfunction App() {\n  return (\n    <div className=\"App container h-100 col-xs-1\">\n      <div><h1>Pet Shelter</h1></div>\n      <div>\n        <Router>\n          <AllPets path=\"/\"></AllPets>\n          <CreatePet path=\"/pets/new\"></CreatePet>\n          <OnePet path=\"/pets/:petID\"></OnePet>\n          <EditPet path=\"/pets/:petID/edit/\"></EditPet>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}